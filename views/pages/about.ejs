<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Albums</title>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
</head>

<body>
  <div class="content">
    <ul>
      <% names.forEach(album=> { %>
        <li>

          <img src="<%= album.picture %>" />
          <p>
            <span>
              <%= album.artist %>
            </span> -
            <span>
              <%= album.name %>
            </span>
          </p>
          Tracks:
          <ul>
            <% album.tracks.forEach(track=> { %>
              <li>
                <p data-id="<%= track.id %>" class="track" style="cursor: pointer">
                  <%= track.name %>
                </p>
              </li>
              <% }) %>

          </ul>
        </li>
        <% }) %>
    </ul>
  </div>
  <button class="play">PLAY</button>
  <button class="pause">PAUSE</button>

  <script src="https://sdk.scdn.co/spotify-player.js"></script>
  <script>
    window.onSpotifyWebPlaybackSDKReady = () => {
      const token = '<%= access_token %>';
      const player = new Spotify.Player({
        name: 'Web Playback SDK Quick Start Player',
        getOAuthToken: cb => { cb(token); }
      });

      // Error handling
      player.addListener('initialization_error', ({ message }) => { console.error(message); });
      player.addListener('authentication_error', ({ message }) => { console.error(message); });
      player.addListener('account_error', ({ message }) => { console.error(message); });
      player.addListener('playback_error', ({ message }) => { console.error(message); });

      // Playback status updates
      player.addListener('player_state_changed', state => { console.log(state); });

      // Ready
      player.addListener('ready', ({ device_id }) => {
        console.log('Ready with Device ID', device_id);
        // play(device_id);

        document.querySelector('.play').addEventListener("click", (e) => {
          play();
        });

        document.querySelectorAll('.track').forEach(el => {
          el.addEventListener("click", (e) => {
            console.log(e.target.dataset.id);
            play(device_id, e.target.dataset.id);
          });
        });


        document.querySelector('.pause').addEventListener("click", () => {
          pause();
        });


      });

      // Not Ready
      player.addListener('not_ready', ({ device_id }) => {
        console.log('Device ID has gone offline', device_id);
      });

      // Connect to the player!
      player.connect();
    };


    function play(device_id, track_id) {
      const token = '<%= access_token %>';
      let url = 'https://api.spotify.com/v1/me/player/play';
      if (device_id !== undefined) {
        url += `?device_id=${device_id}`;
      }
      console.log(url);
      $.ajax({
        url,
        type: "PUT",
        data: `{"uris": ["spotify:track:${track_id}"]}`,
        beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },
        success: function (data) {
          console.log(data)
        }
      });
    }

    function pause() {
      const token = '<%= access_token %>';
      $.ajax({
        url: "https://api.spotify.com/v1/me/player/pause",
        type: "PUT",
        data: '{"uris": ["spotify:track:2dCbaTDqGaVUMBxzWxTuHj"]}',
        beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },
        success: function (data) {
          console.log(data)
        }
      });
    }
  </script>
</body>

</html>
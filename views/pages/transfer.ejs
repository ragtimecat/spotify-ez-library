<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Transfer</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="content">
    <div class="container">
      <div class="host-content">
        <p>You are logged as <%= userData.name %></p>
        <p>email: <%= userData.email %></p>
        <p>You have <%= numberOfAlbums %> albums in library</p>
        <p>You have <%= transferData.length %> albums loaded</p>
        <p>add new album</p>
        <form action="POST" id="album-save-form">
          <input type="text" name="album-id" id="album-id">
          <input type="submit" value="Submit">
        </form>

        <table style="width:40%">
          <tr>
            <th>id</th>
            <th>name</th>
            <th>artist</th>
          </tr>
          <% transferData.forEach(el => { %>
            <tr>
              <td><%= el.id %></td>
              <td><%= el.name %></td>
              <td><%= el.artists[0] %></td>
              <td><button class="save-album-btn" album-id="<%= el.id %>">Transfer</button></td>
            </tr>
          <% }) %>
        </table>
      </div>
      <div class="recipient-content">
        <p>You are logged as: <span class="recipient-name"></span></p>
        <p>email: <span class="recipient-email"></span></p>
        <p>Insert access token</p>
        <form action="POST" id="access-token-id">
          <input type="text" id="access-token-value">
          <input type="submit" value="Save Token">
        </form>
        <p>load user's library</p>
        <p class="token-loading-error"></p>
        <button class="load-user-lib">Load</button>
        <p>Transfer albums</p>
        <button class="transfer-albums-btn">Transfer</button>
      </div>
    </div>

    
  </div>
</body>

<script>
  window.onload = async () => {
    const token = getRecipientCookie();
    if(!token) {
      console.log('no token');
      return;
    }
    document.querySelector('#access-token-value').value = token;
    loadRecipient(token);

  }
  document.querySelector('#album-save-form').addEventListener('submit', el => {
    el.preventDefault();
    const albumId = document.querySelector('#album-id').value;
    fetch('/save-single-album', {
      method: 'POST',
      headers: {
        'Content-Type': 'Application/json'
      },
      body: JSON.stringify({
        albumId
      })
    });
  })
  document.querySelector('#access-token-id').addEventListener('submit', el => {
    el.preventDefault();
    const recipientToken = document.querySelector('#access-token-value').value;
    document.cookie=`recipientToken=${recipientToken};path=/;`
    loadRecipient(recipientToken);
  })

  document.querySelector('.load-user-lib').addEventListener('click',async el => {
    // splitting all cookie string to dictinct cookies, than filter through to find one with the right name
    // and then cutting text, so we get a clean token
    const recipientAccessToken = getRecipientCookie();
    //visual error handling when token is not present
    if (!recipientAccessToken) {
      console.log('no token');
      noTokenErrorShow();
      return;
    }
    // let response = await fetch(`https://api.spotify.com/v1/me/albums?limit=10`, {
    //   method: 'GET',
    //   headers: { 'Authorization': `Bearer ${recipientAccessToken}` }
    // });

    // const albums = await response.json();
    // console.log(albums);
  })

  document.querySelector('.transfer-albums-btn').addEventListener('click', el => {
    const token = getRecipientCookie();
    if (!token) {
      console.log('no token');
      noTokenErrorShow();
      return;
    }
    fetch('/transfer-albums-to-recipient', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        access_token: token
      })
    })
  })

  document.querySelectorAll('.save-album-btn').forEach(el => el.addEventListener('click', async e => {
    const albumId = e.target.getAttribute('album-id');
    const access_token = getRecipientCookie();
    if (!access_token) {
      console.log('no token');
      noTokenErrorShow();
      return;
    }
    await fetch('/save-single-album', {
      method: 'POST',
      headers: {
        'Content-Type': 'Application/json'
      },
      body: JSON.stringify({
        albumId,
        access_token
      })
    });
  }))

  document.querySelector('.token-loading-error').addEventListener('click', el => {
    el.target.style.display = 'none';
  })

  const getRecipientCookie = () => {
    const cookie = document.cookie.split(';')
      .filter(el => el.includes('recipientToken='))[0];
    if(!cookie) {
      return false;
    }
    return cookie.replace('recipientToken=','');
  }

  const loadRecipient = async (token) => {
    const response = await fetch('/get-user-data', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        token
      })
    })
    const parsedResp = await response.json();

    document.querySelector('.recipient-name').innerHTML = parsedResp.data.name;
    document.querySelector('.recipient-email').innerHTML = parsedResp.data.email;
  }

  const noTokenErrorShow = () => {
    const errorText = document.querySelector('.token-loading-error');
      errorText.style.display = 'block';
      errorText.innerText = 'Please enter the token';
  }
</script>